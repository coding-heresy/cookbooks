-*- Mode: Outline -*-

* ways to check things out
** check out release tag
clone repository with git clone, change to the repository directory,
list the available tags with:
   git tag -l
then, for some tag <tag>, checkout the tag with:
   git checkout tags/<tag>
** check out branch from remote
NOTE: this is for git versions >= 1.6.6
*** fetch all branches
git fetch
*** fetch and merge
git pull
*** view available branches
git branch -v -a
*** check out the branch
e.g. for a branch named "test_branch":
git checkout test_branch
* file and directory operations
** delete a file
git rm <filename>
git commit -m '<commit message>' <filename>
** move a file
e.g.
mkdir src
git mv hello.cpp src
** restore repository version of a file
mv filename filename.bak
git reset HEAD filename
git checkout -- filename
* pushing
** Push commits to remote master (commonly used for github)
git push origin master
* amend the most recent commit message
git commit --amend -m "New commit message"
* revert the most recent commit
git reset --soft HEAD@{1}
* create new local repo and add it to github
** in local machine directory for the project
*** initialize git support
git init -b master
*** add all files
git add .
*** make the first commit
git commit -m 'first commit'
** on github
*** create new repository in home area
do not initialize any files such as README.md, license, .gitignore
*** on repository page, look for the Quick setup section
*** select SSH instead of HTTP
*** copy the URL
** back in local machine directory for the project
*** add origin
git remote add origin <URL that was copied from new project page>
*** test setup
git remote -v
*** push the changes
git push origin master
* ways to diff things
** diff between 2 branches with meld
*** set meld as the diff tool
git config --global diff.tool meld
*** perform the diff
git difftool -d <branch 1> <branch 2>
